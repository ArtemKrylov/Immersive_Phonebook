{"version":3,"file":"static/js/417.b34a7925.chunk.js","mappings":"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","sources":["components/FormErrorMessage/FormErrorMessage.tsx","components/AuthForm/AuthForm.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { ErrorMessage } from \"formik\";\nimport { Text } from \"@chakra-ui/react\";\nimport { theme } from \"chakra/theme\";\n\ninterface FormErrorMessageInterface {\n  name: string;\n}\n\nconst FormErrorMessage: React.FC<FormErrorMessageInterface> = ({ name }) => {\n  return (\n    <Text as={\"div\"} mb={1} maxWidth={\"250px\"} color={theme.colors.error}>\n      <ErrorMessage component=\"div\" name={name} />\n    </Text>\n  );\n};\n\nexport default FormErrorMessage;\n","import React, { FC } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { object, string } from \"yup\";\nimport {\n  Button,\n  Flex,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n} from \"@chakra-ui/react\";\n\nimport { useAppDispatch } from \"hooks/useAppDispatch\";\nimport { userLogin, userSignUp } from \"redux/auth/operationsAuth\";\nimport FormErrorMessage from \"components/FormErrorMessage/FormErrorMessage\";\n\nconst signUpSchema = object({\n  name: string().required(),\n  email: string().email().required(),\n  password: string().min(7).max(16).required(),\n});\n\nconst loginSchema = object({\n  email: string().email().required(),\n  password: string().min(7).max(16).required(),\n});\n\ninterface AuthFormInterface {\n  type: \"register\" | \"login\";\n}\n\nconst AuthForm: FC<AuthFormInterface> = ({ type }) => {\n  const dispatch = useAppDispatch();\n  const isRegisterForm: boolean = type === \"register\" ? true : false;\n\n  function handleAuthSubmit(\n    {\n      name,\n      email,\n      password,\n    }: { name: string; email: string; password: string },\n    { resetForm }: any\n  ) {\n    switch (type) {\n      case \"register\": {\n        dispatch<any>(userSignUp({ name, email, password }));\n        break;\n      }\n      case \"login\": {\n        dispatch<any>(userLogin({ email, password }));\n        break;\n      }\n      default:\n        throw new Error(\"wrong auth type value\");\n    }\n    resetForm();\n  }\n\n  return (\n    <>\n      <Heading\n        className=\"auth__heading\"\n        fontSize={\"26px\"}\n        mb={2}\n        mt={2}\n        textAlign=\"center\"\n      >\n        {isRegisterForm ? \"Sign up\" : \"Login\"}\n      </Heading>\n      <Formik\n        initialValues={{ name: \"\", email: \"\", password: \"\" }}\n        validationSchema={isRegisterForm ? signUpSchema : loginSchema}\n        onSubmit={handleAuthSubmit}\n      >\n        <Form className=\"auth__form\">\n          <Flex flexDir={\"column\"} alignItems=\"center\" justifyContent=\"center\">\n            {isRegisterForm && (\n              <FormLabel\n                className=\"auth__label\"\n                cursor={\"pointer\"}\n                htmlFor=\"name\"\n                mb={3}\n                mr={0}\n                _hover={{ color: \"accent.500\" }}\n                _focus={{ color: \"accent.500\" }}\n              >\n                <Text className=\"auth__label-text\" mb={1}>\n                  Name\n                </Text>\n                <FormErrorMessage name=\"name\" />\n                <Field\n                  as={Input}\n                  name=\"name\"\n                  type=\"text\"\n                  required\n                  placeholder=\"Enter your name\"\n                  className=\"auth__input\"\n                  w={{ md: \"400px\", lg: \"500px\" }}\n                  _hover={{\n                    borderColor: \"accent2.700\",\n                    _placeholder: { color: \"accent.500\" },\n                  }}\n                  _focus={{\n                    borderColor: \"accent2.700\",\n                    _placeholder: { color: \"accent.500\" },\n                  }}\n                />\n              </FormLabel>\n            )}\n            <FormLabel\n              className=\"auth__label\"\n              cursor={\"pointer\"}\n              htmlFor=\"email\"\n              mb={3}\n              mr={0}\n              _hover={{ color: \"accent.500\" }}\n              _focus={{ color: \"accent.500\" }}\n            >\n              <Text className=\"auth__label-text\" mb={1}>\n                Email\n              </Text>\n              <FormErrorMessage name=\"email\" />\n              <Field\n                as={Input}\n                name=\"email\"\n                type=\"email\"\n                required\n                placeholder=\"Enter your email\"\n                className=\"auth__input\"\n                w={{ md: \"400px\", lg: \"500px\" }}\n                _hover={{\n                  borderColor: \"accent2.700\",\n                  _placeholder: { color: \"accent.500\" },\n                }}\n                _focus={{\n                  borderColor: \"accent2.700\",\n                  _placeholder: { color: \"accent.500\" },\n                }}\n              />\n            </FormLabel>\n            <FormLabel\n              className=\"auth__label\"\n              htmlFor=\"password\"\n              cursor={\"pointer\"}\n              mb={3}\n              mr={0}\n              _hover={{ color: \"accent.500\" }}\n              _focus={{ color: \"accent.500\" }}\n            >\n              <Text className=\"auth__label-text\" mb={1}>\n                Password\n              </Text>\n              <FormErrorMessage name=\"password\" />\n              <Field\n                as={Input}\n                name=\"password\"\n                type=\"password\"\n                required\n                placeholder=\"Enter your password\"\n                className=\"auth__input\"\n                w={{ md: \"400px\", lg: \"500px\" }}\n                _hover={{\n                  borderColor: \"accent2.700\",\n                  _placeholder: { color: \"accent.500\" },\n                }}\n                _focus={{\n                  borderColor: \"accent2.700\",\n                  _placeholder: { color: \"accent.500\" },\n                }}\n              />\n            </FormLabel>\n\n            <Button\n              type=\"submit\"\n              className=\"auth__submit-btn\"\n              mt={2}\n              colorScheme={\"purple\"}\n              _hover={{\n                color: \"purple.700\",\n                bgColor: \"white\",\n                border: \"1px solid purple\",\n              }}\n              _focus={{\n                color: \"purple.700\",\n                bgColor: \"white\",\n                border: \"1px solid purple\",\n              }}\n            >\n              {isRegisterForm ? \"Sign up\" : \"Login\"}\n            </Button>\n          </Flex>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\n\nimport { selectorLoadingAuth } from \"redux/auth/selectorsAuth\";\nimport { useAppSelector } from \"hooks/useAppSelector\";\nimport AuthForm from \"components/AuthForm/AuthForm\";\nimport Loader from \"components/Loader/Loader\";\nimport ContainerComp from \"components/Container/ContainerComp\";\n\nconst RegisterPage: React.FC = () => {\n  const isLoading: boolean = useAppSelector(selectorLoadingAuth);\n\n  return (\n    <ContainerComp>\n      {isLoading ? <Loader /> : <AuthForm type=\"register\" />}\n    </ContainerComp>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["_ref","name","_jsx","Text","as","mb","maxWidth","color","theme","children","ErrorMessage","component","signUpSchema","object","string","required","email","password","min","max","loginSchema","type","dispatch","useAppDispatch","isRegisterForm","_jsxs","_Fragment","Heading","className","fontSize","mt","textAlign","Formik","initialValues","validationSchema","onSubmit","_ref2","_ref3","resetForm","userSignUp","userLogin","Error","Form","Flex","flexDir","alignItems","justifyContent","FormLabel","cursor","htmlFor","mr","_hover","_focus","FormErrorMessage","Field","Input","placeholder","w","md","lg","borderColor","_placeholder","Button","colorScheme","bgColor","border","isLoading","useAppSelector","selectorLoadingAuth","ContainerComp","Loader","AuthForm"],"sourceRoot":""}