{"version":3,"file":"static/js/778.c43a9947.chunk.js","mappings":"4NAoDA,EAjDoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,KAYjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAW,GAAIC,SAXvB,SAA6BC,GAC3BA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbC,EAAeF,EAAKG,SAASD,KAAKE,MAClCC,EAAiBL,EAAKG,SAASE,OAAOD,MACvCF,GAASG,IACdZ,GAAca,EAAAA,EAAAA,IAAW,CAAEJ,KAAAA,EAAMG,OAAAA,KACjCL,EAAKO,QACP,EAGqDC,SAAA,EACjDb,EAAAA,EAAAA,MAAA,SAAAa,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGb,UAAU,0BAAyBY,SAAC,UACvCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLd,UAAU,qBACVM,KAAK,OACLS,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAU,WAAO,EACjBC,YAAY,kBACZC,WAAS,QAGbrB,EAAAA,EAAAA,MAAA,SAAAa,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGb,UAAU,0BAAyBY,SAAC,YACvCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,MACLd,UAAU,qBACVM,KAAK,SACLS,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAU,WAAO,EACjBC,YAAY,gCAGhBN,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASd,UAAU,sBAAqBY,SAAC,kBAK5D,E,UCnBA,EArBoD,SAAHS,GAA8B,IAAxBC,EAAED,EAAFC,GAAIhB,EAAIe,EAAJf,KAAMG,EAAMY,EAANZ,OACzDZ,GAAWC,EAAAA,EAAAA,KAIjB,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaY,SAAA,EACzBb,EAAAA,EAAAA,MAAA,QAAMC,UAAU,oBAAmBY,SAAA,CAAEN,EAAK,QAC1CO,EAAAA,EAAAA,KAAA,QAAMb,UAAU,sBAAqBY,SAAEH,KACvCI,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLd,UAAU,sBACVQ,MAAOc,EACPC,QAXN,SAA8BrB,GAC5BL,GAAc2B,EAAAA,EAAAA,IAAcF,GAC9B,EASoCV,SAC/B,aAKP,E,wCC1BIa,EAAY,SAACC,GAAK,OAAqBC,EAAAA,EAAAA,KACzCC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAER7B,UAAW,sBACR0B,GAAK,IACRI,OAAKD,EAAAA,EAAAA,GAAA,CACHE,QAAS,eACTC,KAAM,WACNC,SAAU,GACPP,EAAa,SAGrB,EACDD,EAAUS,YAAc,Y,cCdNC,OAAOC,OAAO,CAC9B,OACA,KACA,KACA,KACA,KACA,QAEF,SAASC,EAAcC,EAAMC,GAC3B,OAAIC,MAAMC,QAAQH,GACTA,EAAKI,KAAI,SAACC,GAAI,OAAc,OAATA,EAAgB,KAAOJ,EAAOI,EAAK,KAE3DC,EAAAA,EAAAA,IAASN,GACJH,OAAOU,KAAKP,GAAMQ,QAAO,SAACC,EAAQC,GAEvC,OADAD,EAAOC,GAAOT,EAAOD,EAAKU,IACnBD,CACT,GAAG,CAAC,GAEM,MAART,EACKC,EAAOD,GAET,IACT,CAyBA,IC/CIW,EAAW,kC,sICgBXC,GAAQC,EAAAA,EAAAA,IAAW,SAACzB,EAAO0B,GAC7B,IACEC,EAWE3B,EAXF2B,SACWC,EAUT5B,EAVF6B,UACAC,EASE9B,EATF8B,MACAC,EAQE/B,EARF+B,QAAOC,EAQLhC,EAPFiC,QAAAA,OAAO,IAAAD,EAAG,SAAQA,EAClBE,EAMElC,EANFkC,KACAhD,EAKEc,EALFd,SACAiD,EAIEnC,EAJFmC,QACA7D,EAGE0B,EAHF1B,UACA8D,EAEEpC,EAFFoC,mBACGC,GAAIC,EAAAA,EAAAA,GACLtC,EAAKuC,GACHV,EAAYF,EAAW,MAAyB,MAAjBC,EAAwBA,EAAgB,SACvEY,GAASC,EAAAA,EAAAA,UACb,kBD/BJ,SAAwBC,GACtB,IAAQT,EAAuBS,EAAvBT,QAASJ,EAAca,EAAdb,UACXc,EAAkB,CACtBC,OAAQ,CACNC,UAAWZ,EACXa,UAAW,EACXC,aAAc,EACdC,YAAa,GAEfC,IAAK,CAAEJ,UAAW,EAAGC,UAAW,EAAGC,aAAc,EAAGC,YAAaf,GACjE,iBAAkB,CAChBY,UAAW,EACXC,UAAW,EACXC,aAAcd,EACde,YAAa,GAEf,cAAe,CACbH,UAAW,EACXC,UAAWb,EACXc,aAAc,EACdC,YAAa,IAGjB,OAAAE,EAAAA,EAAAA,GAAA,CACEC,cAAetB,GACdN,EAAWZ,EACVkB,GACA,SAAC/C,GAAK,OAAK6D,EAAgB7D,EAAM,IAGvC,CCCUsE,CAAe,CAAEvB,UAAAA,EAAWI,QAAAA,GAAU,GAC5C,CAACJ,EAAWI,IAERoB,GAAeZ,EAAAA,EAAAA,UACnB,kBDJJ,SAA0BC,GACxB,IAAQT,EAAuBS,EAAvBT,QAASJ,EAAca,EAAdb,UACXyB,EAAgB,CACpBV,OAAQ,CACNW,GAAItB,EACJuB,GAAI,EACJC,gBAAiB,EACjBC,kBAAmB,OAErB,iBAAkB,CAChBH,GAAItB,EACJuB,GAAI,EACJC,gBAAiB,EACjBC,kBAAmB,OAErBT,IAAK,CACHO,GAAIvB,EACJsB,GAAI,EACJE,gBAAiB,MACjBC,kBAAmB,GAErB,cAAe,CACbF,GAAIvB,EACJsB,GAAI,EACJE,gBAAiB,MACjBC,kBAAmB,IAGvB,MAAO,CACL,IAAK/C,EACHkB,GACA,SAAC/C,GAAK,OAAKwE,EAAcxE,EAAM,IAGrC,CC9BU6E,CAAiB,CAAE1B,QAAAA,EAASJ,UAAAA,GAAY,GAC9C,CAACI,EAASJ,IAEN+B,IAAezB,EACf0B,GAAqBzB,IAAuBwB,EAC5CE,GAASrB,EAAAA,EAAAA,UAAQ,WACrB,IAAMsB,EC1CV,SAA0B7E,GACxB,OAAO8E,EAAAA,SAAAA,QAAiB9E,GAAU+E,QAChC,SAACC,GAAK,OAAKC,EAAAA,EAAAA,gBAAeD,EAAM,GAEpC,CDsC0BE,CAAiBlF,GACvC,OAAO2E,EAAoBE,EAAgBA,EAAc/C,KAAI,SAACkD,EAAOG,GACnE,IAAM/C,EAA2B,qBAAd4C,EAAM5C,IAAsB4C,EAAM5C,IAAM+C,EACrDC,EAASD,EAAQ,IAAMN,EAAcQ,OAErCC,EAASpC,GADsBnC,EAAAA,EAAAA,KAAIF,EAAW,CAAEb,SAAUgF,GAAS5C,GACtB4C,EACnD,IAAKN,EACH,OAAOY,EACT,IAAMC,GAAgBC,EAAAA,EAAAA,cACpBvC,EACA,CACE/B,MAAOiD,IAGLsB,EAAWL,EAAS,KAAOG,EACjC,OAAuBG,EAAAA,EAAAA,MAAKC,EAAAA,SAAU,CAAE3F,SAAU,CAChDsF,EACAG,IACGrD,EACP,GACF,GAAG,CACDa,EACAkB,EACAO,EACAC,EACAzB,EACAlD,IAEI4F,GAAaC,EAAAA,EAAAA,IAAG,eAAgBzG,GACtC,OAAuB2B,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAERuB,IAAAA,EACArB,QAAS,OACT2E,WAAYlD,EACZmD,eAAgBlD,EAChBoB,cAAeX,EAAOW,cACtB+B,SAAUhD,EACV5D,UAAWwG,EACX1E,MAAOwD,EAAa,CAAC,GAACV,EAAAA,EAAAA,GAAA,GAAM3B,EAAWiB,EAAOjB,KAC3Cc,GAAI,IACPnD,SAAU4E,IAGhB,IACAtC,EAAMhB,YAAc,Q,iJExEhB2E,GAAiBjF,EAAAA,EAAAA,GAAO,MAAO,CACjCkF,UAAW,CACTC,UAAW,OACXC,eAAgB,cAChBC,OAAQ,UACRC,MAAO,cACPC,cAAe,OACfC,WAAY,OACZ,yBAA0B,CACxBC,WAAY,aAIdC,GAAcC,EAAAA,EAAAA,IAAO,wBACrBC,GAAYD,EAAAA,EAAAA,IAAO,sBACnBE,GAAOC,EAAAA,EAAAA,IAAU,CACnBC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,KAEbE,GAASJ,EAAAA,EAAAA,IAAU,CACrBC,KAAM,CACJI,YAAaT,EAAYU,UACzBC,WAAYX,EAAYU,WAE1BH,GAAI,CACFE,YAAaP,EAAUQ,UACvBC,WAAYT,EAAUQ,aAGtBE,GAAW/E,EAAAA,EAAAA,IAAW,SAACzB,EAAO0B,GAChC,IAAM+E,GAAatG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdH,GAAK,IACR0G,aAA4C,kBAAvB1G,EAAM0G,aAA4B1G,EAAM0G,aAAe,GAC5EC,MAA8B,kBAAhB3G,EAAM2G,MAAqB3G,EAAM2G,MAAQ,KAEnDnE,GAASoE,EAAAA,EAAAA,IAAe,WAAYH,GACpCI,ECnDR,WACE,IAAMA,GAAgBC,EAAAA,EAAAA,SAAO,GAI7B,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAcG,SAAU,CAC1B,GAAG,IACIH,EAAcG,OACvB,CD6CwBC,GACtBC,GASIC,EAAAA,EAAAA,IAAiBV,GAAcW,EAAAF,EARjCG,WAAAA,OAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAAJ,EACfK,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EACbE,EAAQN,EAARM,SACAd,EAAYQ,EAAZR,aACAC,EAAKO,EAALP,MACArI,EAAS4I,EAAT5I,UACAmJ,EAAUP,EAAVO,WACGpF,GAAIC,EAAAA,EAAAA,GAAA4E,EAAA3E,GAETmF,GAAqCC,EAAAA,EAAAA,IAAS,SAAU,CACtDN,EACAE,IACAK,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAHKI,EAAaF,EAAA,GAAEG,EAAWH,EAAA,GAI3BI,EElER,SAAqBlJ,GACnB,IAAM4C,GAAMoF,EAAAA,EAAAA,UAIZ,OAHAC,EAAAA,EAAAA,YAAU,WACRrF,EAAIsF,QAAUlI,CAChB,GAAG,CAACA,IACG4C,EAAIsF,OACb,CF4D8BiB,CAAYT,GAClC1C,GAAaC,EAAAA,EAAAA,IAAG,kBAAmBzG,GACnC4J,GAAY/H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb2H,IAAa5E,EAAAA,EAAAA,GAAA,GAAO0C,EAAYuC,SAAWL,IAC3CC,IAAW7E,EAAAA,EAAAA,GAAA,GAAO4C,EAAUqC,SAAWJ,IAE5C,GAAIP,EAAU,CACZ,IAAMY,EAAYvB,GAAiBmB,EAAsB,OAAS,GAAHK,OAAMtC,EAAI,KAAAsC,OAAI3B,EAAY,KACzF,OAAuBzG,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,GAAA,CAERuB,IAAAA,EACApD,UAAWwG,EACX1E,MAAO,CAAEgI,UAAAA,IACN/F,GAGT,CACA,OAAuBpC,EAAAA,EAAAA,KACrBkF,GAAchF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEZuB,IAAAA,EACApD,UAAWwG,GACRzC,GAAI,IACPjC,OAAKD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHmI,MAAOb,EAAa,mBAAgB,GACjCjF,GACA0F,GAAY,IACfK,OAAKpI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOqC,EAAc,OAAM0F,GAChCE,UAAW,GAAFC,OAAK1B,EAAK,gCAAA0B,OAA+BjC,OAI1D,IACAI,EAAShG,YAAc,WGnGvB,IAcA,EAdmC,WACjC,OACEnC,EAAAA,EAAAA,MAACmD,EAAK,CAACgH,EAAE,iBAAgBtJ,SAAA,EACvBC,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,WAAWE,SAAS,cAC/CpI,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,WAAWE,SAAS,cAC/CpI,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,WAAWE,SAAS,cAC/CpI,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,WAAWE,SAAS,cAC/CpI,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,YAAYE,SAAS,cAChDpI,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,WAAWE,SAAS,iBAC/CpI,EAAAA,EAAAA,KAACqH,EAAQ,CAACiC,EAAE,IAAIpB,WAAW,aAAaE,SAAS,eAGvD,E,UCbamB,EAAiB,SAACC,GAAgB,OAAKA,EAAMC,SAASC,IAAK,EAE3DC,EAAwB,SAACH,GAAgB,OACpDA,EAAMC,SAASG,SAAU,ECoB3B,EAf8B,WAC5B,IAAMH,GAAsBI,EAAAA,EAAAA,GAAeN,GACrCK,GAAqBC,EAAAA,EAAAA,GAAeF,GAE1C,OACEzK,EAAAA,EAAAA,MAAA,MAAIC,UAAW,GAAGY,SAAA,CACf6J,IAAa5J,EAAAA,EAAAA,KAAC8J,EAAgB,IAC9BL,EAASrE,OAAS,GACjBqE,EAAS5H,KAAI,SAAArB,GAAA,IAAAuJ,EAAAvJ,EAAGC,GAAAA,OAAE,IAAAsJ,EAAG,GAAEA,EAAEtK,EAAIe,EAAJf,KAAMG,EAAMY,EAANZ,OAAM,OACnCI,EAAAA,EAAAA,KAACgK,EAAW,CAAUvJ,GAAIA,EAAIhB,KAAMA,EAAMG,OAAQA,GAAhCa,EAA0C,MAItE,E,UCEA,EAjB+B,WAC7B,IAAQwJ,GAAUJ,EAAAA,EAAAA,GAAeK,EAAAA,IAAzBD,MACFjL,GAAWC,EAAAA,EAAAA,KAMjB,OALA2I,EAAAA,EAAAA,YAAU,WACHqC,GACLjL,GAAcmL,EAAAA,EAAAA,MAChB,GAAG,CAACnL,EAAUiL,KAGZ/K,EAAAA,EAAAA,MAAA,OAAAa,SAAA,CAAK,gBAEHC,EAAAA,EAAAA,KAACoK,EAAW,KACZpK,EAAAA,EAAAA,KAACqK,EAAW,MAGlB,C","sources":["components/ContactForm/ContactForm.tsx","components/ContactItem/ContactItem.tsx","../node_modules/@chakra-ui/layout/dist/chunk-AMDSPU3E.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-V4DIVZKN.mjs","../node_modules/@chakra-ui/layout/dist/chunk-O5CRURSQ.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/skeleton/dist/chunk-3GRGLNAR.mjs","../node_modules/@chakra-ui/skeleton/dist/chunk-5L3NXCNX.mjs","../node_modules/@chakra-ui/react-use-previous/dist/index.mjs","components/Skeletons/ContactsSkeleton.tsx","redux/contacts/selectorsContacts.ts","components/ContactList/ContactList.tsx","pages/ContactsPage/ContactsPage.tsx"],"sourcesContent":["import { addContact } from \"redux/contacts/operationsContacts\";\nimport { useAppDispatch } from \"hooks/useAppDispatch\";\n\nconst ContactForm = () => {\n  const dispatch = useAppDispatch();\n\n  function onContactFormSubmit(event: any) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name: string = form.elements.name.value;\n    const number: string = form.elements.number.value;\n    if (!name || !number) return;\n    dispatch<any>(addContact({ name, number }));\n    form.reset();\n  }\n\n  return (\n    <form className={\"\"} onSubmit={onContactFormSubmit}>\n      <label>\n        <p className=\"contactForm__label-text\">Name</p>\n        <input\n          type=\"text\"\n          className=\"contactForm__input\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={() => {}}\n          placeholder=\"Enter your name\"\n          autoFocus\n        />\n      </label>\n      <label>\n        <p className=\"contactForm__label-text\">Number</p>\n        <input\n          type=\"tel\"\n          className=\"contactForm__input\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={() => {}}\n          placeholder=\"Enter your phone number\"\n        />\n      </label>\n      <button type=\"submit\" className=\"contactForm__button\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useAppDispatch } from \"hooks/useAppDispatch\";\nimport React from \"react\";\nimport { deleteContact } from \"redux/contacts/operationsContacts\";\n\ninterface ContactItemInterface {\n  id: string;\n  name: string;\n  number: string;\n}\n\nconst ContactItem: React.FC<ContactItemInterface> = ({ id, name, number }) => {\n  const dispatch = useAppDispatch();\n  function handleDeleteBtnClick(event: any) {\n    dispatch<any>(deleteContact(id));\n  }\n  return (\n    <li className=\"contactItem\">\n      <span className=\"contactItem__name\">{name}:</span>\n      <span className=\"contactItem__number\">{number}</span>\n      <button\n        type=\"button\"\n        className=\"contactItem__button\"\n        value={id}\n        onClick={handleDeleteBtnClick}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nvar selector = \"& > *:not(style) ~ *:not(style)\";\nfunction getStackStyles(options) {\n  const { spacing, direction } = options;\n  const directionStyles = {\n    column: {\n      marginTop: spacing,\n      marginEnd: 0,\n      marginBottom: 0,\n      marginStart: 0\n    },\n    row: { marginTop: 0, marginEnd: 0, marginBottom: 0, marginStart: spacing },\n    \"column-reverse\": {\n      marginTop: 0,\n      marginEnd: 0,\n      marginBottom: spacing,\n      marginStart: 0\n    },\n    \"row-reverse\": {\n      marginTop: 0,\n      marginEnd: spacing,\n      marginBottom: 0,\n      marginStart: 0\n    }\n  };\n  return {\n    flexDirection: direction,\n    [selector]: mapResponsive(\n      direction,\n      (value) => directionStyles[value]\n    )\n  };\n}\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  selector,\n  getStackStyles,\n  getDividerStyles\n};\n","import {\n  StackItem\n} from \"./chunk-AMDSPU3E.mjs\";\nimport {\n  getDividerStyles,\n  getStackStyles,\n  selector\n} from \"./chunk-V4DIVZKN.mjs\";\n\n// src/stack/stack.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const styles = useMemo(\n    () => getStackStyles({ direction, spacing }),\n    [direction, spacing]\n  );\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: styles.flexDirection,\n      flexWrap: wrap,\n      className: _className,\n      __css: hasDivider ? {} : { [selector]: styles[selector] },\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import {\n  useIsFirstRender\n} from \"./chunk-5L3NXCNX.mjs\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\nexport {\n  Skeleton\n};\n","// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\nexport {\n  useIsFirstRender\n};\n","// src/index.ts\nimport { useRef, useEffect } from \"react\";\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nexport {\n  usePrevious\n};\n","import { Skeleton, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst ContactsSkeleton: React.FC = () => {\n  return (\n    <Stack p=\"[5,null,10,20]\">\n      <Skeleton h=\"8\" startColor=\"blue.800\" endColor=\"gray.300\" />\n      <Skeleton h=\"8\" startColor=\"blue.500\" endColor=\"gray.300\" />\n      <Skeleton h=\"8\" startColor=\"cyan.500\" endColor=\"gray.300\" />\n      <Skeleton h=\"8\" startColor=\"teal.300\" endColor=\"gray.300\" />\n      <Skeleton h=\"8\" startColor=\"green.400\" endColor=\"gray.300\" />\n      <Skeleton h=\"8\" startColor=\"pink.700\" endColor=\"regray.300d\" />\n      <Skeleton h=\"8\" startColor=\"purple.600\" endColor=\"gray.300\" />\n    </Stack>\n  );\n};\n\nexport default ContactsSkeleton;\n","import { RootState } from \"../store\";\n\nexport const selectContacts = (state: RootState) => state.contacts.data;\n\nexport const selectLoadingContacts = (state: RootState) =>\n  state.contacts.isLoading;\n","import ContactItem from \"components/ContactItem/ContactItem\";\nimport SkeletonContacts from \"components/Skeletons/ContactsSkeleton\";\nimport { useAppSelector } from \"hooks/useAppSelector\";\nimport { Contact } from \"models/contact\";\nimport React from \"react\";\nimport {\n  selectContacts,\n  selectLoadingContacts,\n} from \"redux/contacts/selectorsContacts\";\n\nconst ContactList: React.FC = () => {\n  const contacts: Contact[] = useAppSelector(selectContacts);\n  const isLoading: boolean = useAppSelector(selectLoadingContacts);\n\n  return (\n    <ul className={\"\"}>\n      {isLoading && <SkeletonContacts />}\n      {contacts.length > 0 &&\n        contacts.map(({ id = \"\", name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport { useAppDispatch } from \"hooks/useAppDispatch\";\nimport { useAppSelector } from \"hooks/useAppSelector\";\nimport React, { useEffect } from \"react\";\nimport { selectorAuth } from \"redux/auth/selectorsAuth\";\nimport { fetchContacts } from \"redux/contacts/operationsContacts\";\n\nconst ContactsPage: React.FC = () => {\n  const { token } = useAppSelector(selectorAuth);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (!token) return;\n    dispatch<any>(fetchContacts());\n  }, [dispatch, token]);\n\n  return (\n    <div>\n      ContactsPage\n      <ContactForm />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useAppDispatch","_jsxs","className","onSubmit","event","preventDefault","form","currentTarget","name","elements","value","number","addContact","reset","children","_jsx","type","pattern","title","required","onChange","placeholder","autoFocus","_ref","id","onClick","deleteContact","StackItem","props","jsx","chakra","_objectSpread","__css","display","flex","minWidth","displayName","Object","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","key","selector","Stack","forwardRef","ref","isInline","directionProp","direction","align","justify","_props$spacing","spacing","wrap","divider","shouldWrapChildren","rest","_objectWithoutProperties","_excluded","styles","useMemo","options","directionStyles","column","marginTop","marginEnd","marginBottom","marginStart","row","_defineProperty","flexDirection","getStackStyles","dividerStyle","dividerStyles","my","mx","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","Children","filter","child","isValidElement","getValidChildren","index","isLast","length","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","cx","alignItems","justifyContent","flexWrap","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","$startColor","cssVar","$endColor","fade","keyframes","from","opacity","to","bgFade","borderColor","reference","background","Skeleton","skeletonProps","fadeDuration","speed","useStyleConfig","isFirstRender","useRef","useEffect","current","useIsFirstRender","_omitThemingProps","omitThemingProps","_omitThemingProps$sta","startColor","_omitThemingProps$end","endColor","isLoaded","fitContent","_useToken","useToken","_useToken2","_slicedToArray","startColorVar","endColorVar","wasPreviouslyLoaded","usePrevious","cssVarStyles","variable","animation","concat","width","_dark","p","h","selectContacts","state","contacts","data","selectLoadingContacts","isLoading","useAppSelector","SkeletonContacts","_ref$id","ContactItem","token","selectorAuth","fetchContacts","ContactForm","ContactList"],"sourceRoot":""}